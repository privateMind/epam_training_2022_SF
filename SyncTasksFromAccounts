public class SyncTasksFromAccounts implements Database.Batchable<sObject> {
	private List<Account> accounts;    
	
    public Database.QueryLocator start (Database.BatchableContext bc) {
        return Database.getQueryLocator('SELECT Id,WhatId FROM Task WHERE Is_Synced__c = false');
    }
    
    public  void execute(Database.BatchableContext bc, List<Task> tasks) { 
        // Collecting accountIds of tasks owners + setting Is_Synced__c = true;
        Set<Id> accountIds = new Set<Id>();
        for (Task task : tasks){
            accountIds.add(task.WhatId);
            task.Is_Synced__c = true;
        }
        // Collecting accounts that owns tasks and putting accounts owners Id to a set   
        accounts = new List<Account>();
        accounts = [SELECT Id,OwnerId FROM Account WHERE Id IN : accountIds];
        Set<Id> usersIds = new Set<Id>();
        for (Account account : accounts){
            usersIds.add(account.OwnerId);
        }
        // Collecting users - owners of accounts
        List<User> users = [SELECT Id,FirstName,LastName FROM User WHERE Id IN : usersIds];
        // Put user's ids and users names to a map
        Map<Id,String> accountsOwners = new Map<Id,String>(); 
        for (User user : users){
        	accountsOwners.put(user.Id,user.FirstName+' '+user.LastName);
        }
        for (Account account : accounts){
            account.Updated_By_Task__c = true;
            for (Task task : tasks){
                if (task.WhatId == account.Id){
                    task.Account_Owner__c = accountsOwners.get(account.OwnerId);
                }
            }
        }
        update tasks;
    }
    
    public void finish(Database.BatchableContext bc) {
        update accounts;
    }
}
